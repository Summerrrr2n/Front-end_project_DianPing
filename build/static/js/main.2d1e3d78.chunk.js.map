{"version":3,"sources":["redux/modules/entities/orders.js","utils/request.js","redux/middleware/api.js","redux/modules/entities/products.js","utils/url.js","utils/createReducer.js","redux/modules/entities/shops.js","redux/modules/entities/keywords.js","redux/modules/login.js","redux/modules/entities/comments.js","redux/modules/detail.js","redux/modules/search.js","redux/modules/user.js","redux/modules/home.js","redux/modules/purchase.js","components/ErrorToast/index.js","redux/modules/app.js","utils/AsyncComponent.js","containers/PrivateRoute/index.js","containers/App/index.js","redux/modules/entities/index.js","redux/modules/index.js","redux/store.js","index.js"],"names":["schema","name","id","TO_PAY_TYPE","AVAILABLE_TYPE","REFUND_TYPE","orderIdCounter","types","DELETE_ORDER","ADD_COMMENT","ADD_ORDER","actions","deleteOrder","orderId","type","addComment","commentId","addOrder","order","concat","Object","D_program_meituan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","normalReducer","createReducer","reducer","state","arguments","length","undefined","action","console","log","D_program_meituan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","D_program_meituan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","map","_toPropertyKey","getAllOrders","entities","orders","headers","Headers","Accept","Content-Type","handleResponse","url","response","status","json","error","Promise","reject","message","FETCH_DATA","fetchData","store","next","callAPI","endpoint","Error","Array","isArray","every","actionWith","data","finalAction","objectSpread","_types","slicedToArray","requestType","successType","failureType","then","fetch","method","catch","err","normalizeData","_ref","kvObj","ids","forEach","item","push","defineProperty","__webpack_require__","d","__webpack_exports__","getProductDetail","getProductById","_utils_createReducer__WEBPACK_IMPORTED_MODULE_0__","product","products","detail","purchaseNotes","getProductList","path","rowIndex","pageSize","getShopById","getPopularKeywords","getRelatedKeywords","text","getRelatedShops","keyword","getOrders","D_program_meituan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","shops","getKeywordById","keywords","initialState","username","localStorage","getItem","password","isFetching","login","dispatch","getState","_getState$login","loginRequest","resolve","setTimeout","loginSuccess","setItem","loginFailure","logout","removeItem","setUsername","setPassword","getUsername","getPassword","isLogin","comment","D_program_meituan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","D_program_meituan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","relatedShop","loadProductDetail","fetchProductDetailSuccess","fetchProductDetail","loadShopById","fetchShopSuccess","fetchShopById","productSchema","_ref2","shopSchema","combineReducers","getProduct","getRelatedShop","productId","shopId","nearestShop","inputText","popularKeywords","relatedKeywords","historyKeywords","searchedShopsByKeyword","loadPopularKeywords","search","fetchPopularKeywords","loadRelatedKeywords","fetchRelatedKeywords","loadRelatedShops","getSate","fetchRelatedShops","setInputText","clearInputText","addHistoryKeyword","keywordId","clearHistoryKeywords","D_program_meituan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","keywordSchema","_ref3","relatedKeywordsByText","searchedShops","filter","D_program_meituan_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","trim","getInputText","getHistoryKeywords","getSearchedShops","getCurrentKeyword","typeToKey","_typeToKey","fetched","toPayIds","availableIds","refundIds","currentTab","currentOrder","isDeleting","isCommenting","stars","loadOrders","user","fetchOrders","setCurrentTab","index","removeOrder","deleteOrderRequest","deleteOrderSuccess","orderActions","showDeleteDialog","hideDeleteDialog","showCommentArea","hideCommentArea","setComment","setStars","submitComment","postCommentRequest","_getState$user$curren","commentObj","Date","content","postCommentSuccess","commentActions","removeOrderId","key","orderTypes","getCurrentTab","getDeletingOrderId","getCommentingOrderId","getCurrentOrderComment","getCurrentOrderStars","createSelector","tabIndex","userOrders","params","likes","pageCount","discounts","loadLikes","home","fetchLikes","loadDiscounts","fetchDiscounts","getLikes","getLikesIsFetching","getDiscounts","getPageCountOfLikes","quantity","showTip","setOrderQuantity","closeTip","submitOrder","purchase","totalPrice","currentPrice","toFixed","text1","text2","validityPeriod","title","shop","orderPicUrl","picture","channel","statusText","getQuantity","getTipStatus","getTotalPrice","ErrorToast","msg","this","props","react_default","a","createElement","className","_this","timer","clearError","clearTimeout","Component","getError","app","asyncComponent","importComponent","_Component","AsyncComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","component","inherits","createClass","value","_this2","mod","setState","default","C","PrivateRoute","_this$props","rest","objectWithoutProperties","react_router","assign","render","to","pathname","from","location","connect","Home","all","e","bind","ProductDetail","Search","SearchResult","Login","User","Purchase","App","appActions","react_router_dom","containers_PrivateRoute","components_ErrorToast","bindActionCreators","rootReducer","comments","createStore","applyMiddleware","thunk","api","ReactDOM","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.2d1e3d78.chunk.js","sourcesContent":["\r\nimport createReducer from \"../../../utils/createReducer\";\r\n\r\n\r\nexport const schema = {\r\n    name: 'orders',\r\n    id: 'id',\r\n}\r\n\r\nexport const USED_TYPE = 1 //已消费\r\nexport const TO_PAY_TYPE = 2 //待付款\r\nexport const AVAILABLE_TYPE = 3 //可使用\r\nexport const REFUND_TYPE = 4 //退款\r\n\r\nlet orderIdCounter = 10\r\n\r\nexport const types = {\r\n    DELETE_ORDER: 'ORDERS/DELETE_ORDER',\r\n    //新增评价\r\n    ADD_COMMENT: 'ORDERS/ADD_COMMENT',\r\n    ADD_ORDER: 'ORDERS/ADD_ORDER'\r\n}\r\n\r\nexport const actions = {\r\n    //删除订单\r\n    deleteOrder: (orderId) => ({\r\n        type: types.DELETE_ORDER,\r\n        orderId\r\n    }),\r\n    //新增评价\r\n    addComment: (orderId, commentId) => ({\r\n        type: types.ADD_COMMENT,\r\n        orderId,\r\n        commentId\r\n    }),\r\n    //增加订单\r\n    addOrder: order => {\r\n        const orderId = `o-${orderIdCounter++}`\r\n        return ({\r\n            type: types.ADD_ORDER,\r\n            orderId,\r\n            order: {...order, id:orderId}\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst normalReducer = createReducer(schema.name)\r\n\r\n\r\n\r\nconst reducer = (state={}, action) => {\r\n    if (action.type === types.ADD_COMMENT) {\r\n        console.log('state ',state)\r\n        console.log(action.orderId)\r\n        return {\r\n            ...state,\r\n            [action.orderId]:{\r\n                ...state[action.orderId],\r\n                commentId: action.commentId\r\n            }\r\n        }\r\n    } else if (action.type === types.ADD_ORDER) {\r\n        return {\r\n            ...state,\r\n            [action.orderId]: action.order\r\n        }\r\n    } else if (action.type === types.DELETE_ORDER) {\r\n        const {[action.orderId]: deleteOrder, ...restOrders} = state\r\n        return restOrders\r\n    } else {\r\n        return normalReducer(state, action)\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getOrderById = (state, id) => {\r\n    return state.entities.orders[id]\r\n  }\r\n\r\nexport const getAllOrders = state => state.entities.orders\r\n  ","const headers = new Headers({\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n})\r\n\r\n\r\n\r\nfunction get(url) {\r\n    return fetch(url,{\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(response => {\r\n        return handleResponse(url,response);\r\n    }).catch(err => {\r\n        console.error(`response failed. Url = ${url}. Message: ${err}`)\r\n        return Promise.reject({error: {message: 'Request failed'}})\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction post(url,data) {\r\n    return fetch(url,{\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: data\r\n    }).then(response => {\r\n        return handleResponse(url,response);\r\n    }).catch(err => {\r\n        console.error(`response failed. Url = ${url}. Message: ${err}`)\r\n        return Promise.reject({error: {message: 'Request failed'}})\r\n    })\r\n}\r\n\r\nfunction handleResponse(url,response) {\r\n    if(response.status === 200) {\r\n        return response.json();\r\n    } else {\r\n        console.error(`response failed. Url = ${url}`)\r\n        return Promise.reject({error: {message: 'Request failed due to server error'}})\r\n    }\r\n}\r\n\r\nexport {get, post}","import { get } from \"../../utils/request\"\r\n\r\n//经过中间件处理的action所具有的标识\r\nexport const FETCH_DATA = 'FETCH DATA'\r\n\r\nconst store = () => next => action => {\r\n  const callAPI = action[FETCH_DATA]\r\n  if(typeof callAPI === 'undefined') {\r\n    return next(action)\r\n  }\r\n  const { endpoint, schema, types } = callAPI\r\n  if(typeof endpoint !== 'string') {\r\n    throw new Error('endpoint必须为字符串类型的URL')\r\n  }\r\n  if(!schema) {\r\n    throw new Error('必须指定领域实体的schema')\r\n  }\r\n  if(!Array.isArray(types) && types.length !== 3) {\r\n    throw new Error('需要指定一个包含了3个action type的数组')\r\n  }\r\n  if(!types.every(type => typeof type === 'string')) {\r\n    throw new Error('action type必须为字符串类型')\r\n  }\r\n\r\n  const actionWith = data => {\r\n    const finalAction = {...action, ...data}\r\n    delete finalAction[FETCH_DATA]\r\n    return finalAction\r\n  }\r\n\r\n  const [requestType, successType, failureType] = types\r\n\r\n  next(actionWith({type: requestType}))\r\n  return fetchData(endpoint, schema).then(\r\n    response => next(actionWith({\r\n      type: successType,\r\n      response \r\n    })),\r\n    error => next(actionWith({\r\n      type: failureType,\r\n      error: error.message || '获取数据失败'\r\n    }))\r\n  )\r\n}\r\n\r\n\r\nexport default store;\r\n\r\n\r\n//执行网络请求\r\nconst fetchData = (endpoint, schema) => {\r\n  return get(endpoint).then(data => {\r\n    return normalizeData(data, schema)\r\n  })\r\n}\r\n\r\n//根据schema, 将获取的数据扁平化处理\r\nconst normalizeData = (data, schema) => {\r\n  const {id, name} = schema\r\n  let kvObj = {}\r\n  let ids = []\r\n  if(Array.isArray(data)) {\r\n    data.forEach(item => {\r\n      kvObj[item[id]] = item\r\n      ids.push(item[id])\r\n    })\r\n  } else {\r\n    kvObj[data[id]] = data\r\n    ids.push(data[id])\r\n  }\r\n  return {\r\n    [name]: kvObj,\r\n    ids\r\n  }\r\n}\r\n","import createReducer from \"../../../utils/createReducer\";\r\n\r\n\r\n\r\nexport const schema = {\r\n    name: 'products',\r\n    id: 'id',\r\n  } \r\n  \r\nconst reducer = createReducer(schema.name)\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getProductDetail = (state, id) => {\r\n  const product = state.entities.products[id]\r\n  return product && product.detail && product.purchaseNotes ? product : null;\r\n\r\n}\r\n\r\n\r\nexport const getProductById = (state, id) => {\r\n  return state.entities.products[id]\r\n}\r\n\r\n","const url = {\r\n    getProductList: (path, rowIndex, pageSize) => `/mock/products/${path}.json?rowIndex=${rowIndex}&pageSize=${pageSize}`,\r\n    getProductDetail: (id) => `/mock/product_detail/${id}.json`,\r\n    getShopById: (id) => `/mock/shops/${id}.json`,\r\n    getPopularKeywords: () => `/mock/keywords/popular.json`,\r\n    getRelatedKeywords: (text) => `/mock/keywords/related.json?keyword=${text}` ,\r\n    getRelatedShops: (keyword) => `/mock/shops/related.json?keyword=${keyword}`,\r\n    getOrders: () => `/mock/orders/orders.json`,\r\n};\r\n    \r\nexport default url;","const createReducer = (name) => {\r\n  return (state = {}, action) => {\r\n    if(action.response && action.response[name]) {\r\n      return {...state, ...action.response[name]}\r\n    }\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default createReducer","import createReducer from \"../../../utils/createReducer\";\r\n\r\n\r\nexport const schema = {\r\n    name: 'shops',\r\n    id: 'id',\r\n}\r\n\r\n\r\nconst reducer = createReducer(schema.name)\r\n    \r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getShopById = (state, id) => {\r\n    const shop = state.entities.shops[id];\r\n    return shop\r\n  }","import createReducer from \"../../../utils/createReducer\";\r\n\r\n\r\nexport const schema = {\r\n    name: 'keywords',\r\n    id: 'id',\r\n}\r\n\r\n\r\nconst reducer = createReducer(schema.name)\r\n    \r\nexport default reducer;\r\n//selectors\r\nexport const getKeywordById = (state, id) => {\r\n    return state.entities.keywords[id]\r\n}\r\n\r\n","const initialState = {\r\n    username: localStorage.getItem('username') || '' ,\r\n    password: '',\r\n    isFetching: '',\r\n    status: localStorage.getItem('login') || false, //登录状态标识\r\n}\r\n\r\nexport const types = {\r\n    LOGIN_REQUEST:'LOGIN/LOGIN_REQUEST',\r\n    LOGIN_SUCCESS:'LOGIN/LOGIN_SUCCESS',\r\n    LOGIN_FAILURE:'LOGIN/LOGIN_FAILURE',\r\n    LOGOUT: 'LOGIN/LOGOUT',\r\n    SET_USERNAME: 'LOGIN/SET_USERNAME',\r\n    SET_PASSWORD: 'LOGIN/SET_PASSWORD',\r\n}\r\n\r\nexport const actions = {\r\n    //异步action，执行登录\r\n    login: () => {\r\n        return (dispatch, getState) => {\r\n            const { username, password } = getState().login\r\n            if (!(username && username.length > 0 && password \r\n                && password.length >0) ) {\r\n                    return dispatch(loginFailure('用户名和密码不能为空！'))\r\n                }\r\n            dispatch(loginRequest())\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                    dispatch(loginSuccess())\r\n                    localStorage.setItem('username', username)\r\n                    localStorage.setItem('login', true)\r\n                    resolve()\r\n                }, 1000)\r\n            })\r\n        }\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('username')\r\n        localStorage.removeItem('login')\r\n        return {\r\n        type: types.LOGOUT\r\n    }},\r\n    setUsername: (username) => ({\r\n        type: types.SET_USERNAME,\r\n        username\r\n    }),\r\n    setPassword: (password) => ({\r\n        type: types.SET_PASSWORD,\r\n        password\r\n    }),\r\n\r\n}\r\n\r\n\r\nconst loginSuccess = () => ({\r\n    type:types.LOGIN_SUCCESS\r\n})\r\n\r\nconst loginFailure = error => ({\r\n    type:types.LOGIN_FAILURE,\r\n    error\r\n})\r\n\r\nconst loginRequest = () => ({\r\n    type:types.LOGIN_REQUEST\r\n})\r\n\r\n//reducer\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.LOGIN_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.LOGIN_SUCCESS:\r\n            return {...state, isFetching: false, status: true}\r\n        case types.LOGIN_FAILURE:\r\n            return {...state, isFetching: false}\r\n        case types.LOGOUT:\r\n            return {...state, status: false, username:'', password:''}\r\n        case types.SET_USERNAME:\r\n            return {...state, username:action.username}\r\n        case types.SET_PASSWORD:\r\n            return {...state, password:action.password}\r\n        default:\r\n            return state\r\n        }\r\n}\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\nexport const getUsername = (state) => state.login.username\r\n\r\nexport const getPassword = (state) => state.login.password\r\n\r\nexport const isLogin = (state) => state.login.status","import createReducer from \"../../../utils/createReducer\";\r\n\r\n\r\nexport const schema = {\r\n    name: 'comments',\r\n    id: 'id'\r\n}\r\nexport const types = {\r\n    ADD_COMMENT: 'COMMENTS/ADD_COMMENT'\r\n}\r\n\r\nexport const actions = {\r\n    addComment: (comment) => ({\r\n        type: types.ADD_COMMENT,\r\n        comment\r\n    })\r\n}\r\n\r\nconst normalReducer = createReducer(schema.name)\r\n\r\nconst reducer = (state={}, action) => {\r\n    if (action.type === types.ADD_COMMENT) {\r\n        return {...state, [action.comment.id]: action.comment}\r\n    } else {\r\n        return normalReducer(state, action)\r\n    }\r\n}\r\n\r\nexport default reducer","import { combineReducers } from \"redux\";\r\nimport url from \"../../utils/url\";\r\nimport { FETCH_DATA } from \"../middleware/api\";\r\nimport { schema as shopSchema, getShopById } from \"./entities/shops\";\r\nimport { schema as productSchema, getProductDetail, getProductById } from \"./entities/products\";\r\n\r\nexport const types = {\r\n  // 获取产品详情\r\n  FETCH_PRODUCT_DETAIL_REQUEST: \"DETAIL/FETCH_PRODUCT_DETAIL_REQUEST\",\r\n  FETCH_PRODUCT_DETAIL_SUCCESS: \"DETAIL/FETCH_PRODUCT_DETAIL_SUCCES\",\r\n  FETCH_PRODUCT_DETAIL_FAILURE: \"DETAIL/FETCH_PRODUCT_DETAIL_FAILURE\",\r\n  // 获取关联店铺信息\r\n  FETCH_SHOP_REQUEST: \"DETAIL/FETCH_PRODUCT_DETAIL_REQUEST\",\r\n  FETCH_SHOP_SUCCESS: \"DETAIL/FETCH_PRODUCT_DETAIL_SUCCES\",\r\n  FETCH_SHOP_FAILURE: \"DETAIL/FETCH_PRODUCT_DETAIL_FAILURE\"\r\n};\r\n\r\nconst initialState = {\r\n  product: {\r\n    isFetching: false,\r\n    id: null\r\n  },\r\n  relatedShop: {\r\n    isFetching: false,\r\n    id: null\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  //获取商品详情\r\n  loadProductDetail: id => {\r\n    return (dispatch, getState) => {\r\n      const product = getProductDetail(getState(), id);\r\n      if (product) {\r\n        return dispatch(fetchProductDetailSuccess(id));\r\n      }\r\n      const endpoint = url.getProductDetail(id);\r\n      return dispatch(fetchProductDetail(endpoint, id));\r\n    };\r\n  },\r\n  // 获取店铺信息\r\n  loadShopById: id => {\r\n    return (dispatch, getState) => {\r\n      const shop = getShopById(getState(), id);\r\n      if (shop) {\r\n        return dispatch(fetchShopSuccess(id));\r\n      }\r\n      const endpoint = url.getShopById(id);\r\n      return dispatch(fetchShopById(endpoint, id));\r\n    };\r\n  }\r\n};\r\n\r\nconst fetchProductDetail = (endpoint, id) => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_PRODUCT_DETAIL_REQUEST,\r\n      types.FETCH_PRODUCT_DETAIL_SUCCESS,\r\n      types.FETCH_PRODUCT_DETAIL_FAILURE\r\n    ],\r\n    endpoint,\r\n    schema: productSchema\r\n  },\r\n  id\r\n});\r\n\r\nconst fetchShopById = (endpoint, id) => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_SHOP_REQUEST,\r\n      types.FETCH_SHOP_SUCCESS,\r\n      types.FETCH_SHOP_FAILURE\r\n    ],\r\n    endpoint,\r\n    schema: shopSchema\r\n  },\r\n  id\r\n});\r\n\r\nconst fetchProductDetailSuccess = id => ({\r\n  type: types.FETCH_PRODUCT_DETAIL_SUCCESS,\r\n  id\r\n});\r\n\r\nconst fetchShopSuccess = id => ({\r\n  type: types.FETCH_SHOP_SUCCESS,\r\n  id\r\n});\r\n\r\n// 商品详情reducer\r\nconst product = (state = initialState.product, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_PRODUCT_DETAIL_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_PRODUCT_DETAIL_SUCCESS:\r\n      return { ...state, id: action.id, isFetching: false };\r\n    case types.FETCH_PRODUCT_DETAIL_FAILURE:\r\n      return { ...state, isFetching: false, id: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// 店铺reducer\r\nconst relatedShop = (state = initialState.relatedShop, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_SHOP_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_SHOP_SUCCESS:\r\n      return { ...state, id: action.id, isFetching: false };\r\n    case types.FETCH_SHOP_FAILURE:\r\n      return { ...state, isFetching: false, id: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  product,\r\n  relatedShop\r\n});\r\nexport default reducer;\r\n\r\n// selectors\r\n//获取商品详情\r\nexport const getProduct = (state, id) => {\r\n  return getProductDetail(state, id)\r\n}\r\n\r\n//获取管理的店铺信息\r\nexport const getRelatedShop = (state, productId) => {\r\n  const product = getProductById(state, productId);\r\n  let shopId = product ? product.nearestShop : null;\r\n  if(shopId) {\r\n    return getShopById(state, shopId);\r\n  }\r\n  return null;\r\n}\r\n","import url from \"../../utils/url\"\r\nimport { FETCH_DATA } from \"../middleware/api\"\r\nimport { schema as keywordSchema, getKeywordById } from \"./entities/keywords\"\r\nimport { combineReducers } from \"redux\"\r\nimport { schema as shopSchema } from './entities/shops'\r\nimport { getShopById } from \"./entities/shops\"\r\n\r\nconst types = {\r\n    //获取热门关键词\r\n    FETCH_POPULAR_KEYWORDS_REQUEST: \r\n    'SEARCH/FETCH_POPULAR_KEYWORDS_REQUEST',\r\n    FETCH_POPULAR_KEYWORDS_SUCCESS: \r\n    'SEARCH/FETCH_POPULAR_KEYWORDS_SUCCESS',\r\n    FETCH_POPULAR_KEYWORDS_FAILURE: \r\n    'SEARCH/FETCH_POPULAR_KEYWORDS_FAILURE',\r\n    //根据输入的文本获取相关关键词\r\n    FETCH_RELATED_KEYWORDS_REQUEST: \r\n    'SEARCH/FETCH_RELATED_KEYWORDS_REQUEST',\r\n    FETCH_RELATED_KEYWORDS_SUCCESS: \r\n    'SEARCH/FETCH_RELATED_KEYWORDS_SUCCESS',\r\n    FETCH_RELATED_KEYWORDS_FAILURE: \r\n    'SEARCH/FETCH_RELATED_KEYWORDS_FAILURE',\r\n    //设置当前输入\r\n    SET_INPUT_TEXT: \r\n    'SEARCH/SET_INPUT_TEXT',\r\n    CLEAR_INPUT_TEXT: \r\n    'SEARCH/CLEAR_INPUT_TEXT',\r\n    //历史查询记录\r\n    ADD_HISTORY_KEYWORD:\r\n    'SEARCH/ADD_HISTORY_KEYWORD',\r\n    CLEAR_HISTORY_KEYWORDS:\r\n    'SEARCH/CLEAR_HISTORY_KEYWORDS',\r\n    //根据关键词查询结果\r\n    FETCH_SHOPS_REQUEST: \r\n    'SEARCH/FETCH_SHOPS_REQUEST',\r\n    FETCH_SHOPS_SUCCESS: \r\n    'SEARCH/FETCH_SHOPS_SUCCESS',\r\n    FETCH_SHOPS_FAILURE: \r\n    'SEARCH/FETCH_SHOPS_FAILURE',\r\n}\r\n\r\n\r\nconst initialState = {\r\n    inputText: '',\r\n    popularKeywords: {       \r\n        isFetching: false,\r\n        ids: []\r\n    },\r\n    relatedKeywords: {},\r\n    historyKeywords: [],\r\n    searchedShopsByKeyword: {}\r\n}\r\n\r\n\r\nexport const actions = {\r\n    //获取热门关键词\r\n    loadPopularKeywords: () => {\r\n        return (dispatch, getState) => {\r\n            const { ids } = getState().search.popularKeywords\r\n            if (ids.length > 0) {\r\n                return null\r\n            } \r\n            const endpoint = url.getPopularKeywords()\r\n            return dispatch(fetchPopularKeywords(endpoint)) \r\n        }\r\n    },\r\n    //根据输入获取相关关键词\r\n    loadRelatedKeywords: (text) => {\r\n        return (dispatch, getState) => {\r\n            const { relatedKeywords } = getState().search\r\n            if (relatedKeywords[text]) {\r\n                return null\r\n            } \r\n            const endpoint = url.getRelatedKeywords(text)\r\n            return dispatch(fetchRelatedKeywords(text, endpoint)) \r\n        }\r\n    },\r\n    //获取查询到的店铺列表\r\n    loadRelatedShops: keyword => {\r\n        return (dispatch, getSate) => {\r\n            const { searchedShopsByKeyword } = getSate().search\r\n            console.log(searchedShopsByKeyword)\r\n            if (searchedShopsByKeyword[keyword]) {\r\n                return null\r\n            }\r\n            const endpoint = url.getRelatedShops(keyword)\r\n            return dispatch(fetchRelatedShops(keyword, endpoint))\r\n        }\r\n    },\r\n    //搜索框输入文本相关action\r\n    setInputText: text => ({\r\n        type: types.SET_INPUT_TEXT,\r\n        text\r\n    }),\r\n    clearInputText: () => ({\r\n        type: types.CLEAR_INPUT_TEXT\r\n    }),\r\n    //历史查询记录相关action\r\n    addHistoryKeyword: (keywordId) =>({\r\n        type: types.ADD_HISTORY_KEYWORD,\r\n        text: keywordId\r\n    }),\r\n    clearHistoryKeywords: () => ({\r\n        type: types.CLEAR_HISTORY_KEYWORDS,\r\n    }),\r\n}\r\n\r\nconst fetchPopularKeywords = endpoint => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_POPULAR_KEYWORDS_REQUEST,\r\n            types.FETCH_POPULAR_KEYWORDS_SUCCESS,\r\n            types.FETCH_POPULAR_KEYWORDS_FAILURE,\r\n        ],\r\n        endpoint,\r\n        schema: keywordSchema\r\n    }\r\n})\r\n\r\nconst fetchRelatedKeywords = (keyword,endpoint) => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_RELATED_KEYWORDS_REQUEST,\r\n            types.FETCH_RELATED_KEYWORDS_SUCCESS,\r\n            types.FETCH_RELATED_KEYWORDS_FAILURE,\r\n        ],\r\n        endpoint,\r\n        schema: keywordSchema\r\n    },\r\n    keyword\r\n})\r\n\r\nconst fetchRelatedShops = (text,endpoint) => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_SHOPS_REQUEST,\r\n            types.FETCH_SHOPS_SUCCESS,\r\n            types.FETCH_SHOPS_FAILURE,\r\n        ],\r\n        endpoint,\r\n        schema: shopSchema\r\n    },\r\n    text\r\n})\r\n\r\n//reducers\r\nconst popularKeywords = (state=initialState.popularKeywords, action) => {\r\n    switch(action.type) {\r\n        case types.FETCH_POPULAR_KEYWORDS_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.FETCH_POPULAR_KEYWORDS_SUCCESS:\r\n            return {...state, isFetching: false, ids: state.ids.concat(action.response.ids)}\r\n        case types.FETCH_RELATED_KEYWORDS_FAILURE:\r\n            return {...state, isFetching: false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst relatedKeywords = (state=initialState.relatedKeywords, action) => {\r\n    switch(action.type) {\r\n        case types.FETCH_RELATED_KEYWORDS_REQUEST:\r\n        case types.FETCH_RELATED_KEYWORDS_SUCCESS:\r\n        case types.FETCH_RELATED_KEYWORDS_FAILURE:\r\n            return {...state, \r\n                [action.text]: relatedKeywordsByText(state[action.text], action)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst relatedKeywordsByText = (state = {isFetching: false, ids:[]}, action) => {\r\n    switch(action.type) {\r\n        case types.FETCH_RELATED_KEYWORDS_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.FETCH_RELATED_KEYWORDS_SUCCESS:\r\n            return {...state, isFetching: false, ids: state.ids.concat(action.response.ids)}\r\n        case types.FETCH_RELATED_KEYWORDS_FAILURE:\r\n            return {...state, isFetching: false }\r\n        default:\r\n            return state;\r\n        }\r\n        \r\n}\r\n\r\n\r\nconst searchedShopsByKeyword = (state=initialState.searchedShopsByKeyword, action) => {\r\n    switch(action.type) {\r\n        case types.FETCH_SHOPS_REQUEST:\r\n        case types.FETCH_SHOPS_SUCCESS:\r\n        case types.FETCH_SHOPS_FAILURE:\r\n            return {...state, \r\n                [action.text]: searchedShops(state[action.text], action)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst searchedShops = (\r\n    state = {isFetching: false, ids:[]  }, \r\n    action) => {\r\n    switch(action.type) {\r\n        case types.FETCH_SHOPS_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.FETCH_SHOPS_SUCCESS:\r\n            return {...state, isFetching: false, ids: action.response.ids}\r\n        case types.FETCH_SHOPS_FAILURE:\r\n            return {...state, isFetching: false }\r\n        default:\r\n            return state;\r\n        }\r\n        \r\n}\r\n\r\nconst inputText = (state = initialState.inputText, action) => {\r\n    switch(action.type) {\r\n        case types.SET_INPUT_TEXT:\r\n            return action.text\r\n        case types.CLEAR_INPUT_TEXT:\r\n            return ''\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nconst historyKeywords = (state = initialState.historyKeywords, action) => {\r\n    switch(action.type) {\r\n        case types.ADD_HISTORY_KEYWORD:\r\n            const data = state.filter(item => {\r\n                if(item !== action.text) {\r\n                    return true\r\n                }\r\n                return false\r\n            })\r\n            return [action.text, ...data]\r\n        case types.CLEAR_HISTORY_KEYWORDS:\r\n            return []\r\n        default:\r\n            return state        \r\n    }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    historyKeywords,\r\n    popularKeywords,\r\n    inputText,\r\n    relatedKeywords,\r\n    searchedShopsByKeyword\r\n  })\r\n  \r\n\r\n\r\n\r\nexport default reducer;\r\n\r\n\r\n//selectors\r\nexport const getPopularKeywords = state => {\r\n    return state.search.popularKeywords.ids.map(id => {\r\n        return getKeywordById(state, id)\r\n    })\r\n}\r\nexport const getRelatedKeywords = (state) => {\r\n    const text = state.search.inputText\r\n    if (!text || text.trim().length === 0) {\r\n        return []\r\n    }\r\n    const relatedKeywords = state.search.relatedKeywords[text]\r\n    if (!relatedKeywords) {\r\n        return []\r\n    }\r\n    return relatedKeywords.ids.map(id => {\r\n        return getKeywordById(state, id)\r\n    })\r\n}\r\n\r\nexport const getInputText = state => {\r\n    return state.search.inputText\r\n}\r\n\r\nexport const getHistoryKeywords = state => {\r\n    return state.search.historyKeywords.map(id => {\r\n        return getKeywordById(state, id)\r\n    })\r\n}\r\n\r\nexport const getSearchedShops = state => {\r\n    const keywordId = state.search.historyKeywords[0]\r\n    if (!keywordId) {\r\n        return []\r\n    }\r\n    const shops = state.search.searchedShopsByKeyword[keywordId]\r\n    console.log('shops',shops)\r\n    return shops.ids.map(id => {\r\n        return getShopById(state, id)\r\n    })\r\n}\r\n\r\nexport const getCurrentKeyword = state => {\r\n    const keywordId = state.search.historyKeywords[0]\r\n    if(!keywordId) {\r\n        return ''\r\n    }\r\n    return getKeywordById(state, keywordId).keyword\r\n}","import { combineReducers } from \"redux\"\r\nimport url from \"../../utils/url\"\r\nimport { FETCH_DATA } from \"../middleware/api\"\r\nimport { schema, TO_PAY_TYPE, \r\n    REFUND_TYPE, AVAILABLE_TYPE, getAllOrders, \r\n    actions as orderActions, types as orderTypes} from './entities/orders'\r\nimport { actions as commentActions } from './entities/comments'\r\nimport { createSelector } from \"reselect\"\r\n\r\nconst typeToKey = {\r\n    [TO_PAY_TYPE]: 'toPayIds',\r\n    [AVAILABLE_TYPE]: 'availableIds',\r\n    [REFUND_TYPE]: 'refundIds'\r\n}\r\n\r\nconst initialState = {\r\n    orders: {\r\n        isFetching: false,\r\n        fetched: false,\r\n        ids:[],\r\n        toPayIds: [],\r\n        availableIds:[],\r\n        refundIds:[]\r\n    },\r\n    currentTab:0,\r\n    currentOrder: {\r\n        id: null,\r\n        isDeleting: false,\r\n        isCommenting: '',\r\n        comment: '',\r\n        stars: 0\r\n    }\r\n}\r\n\r\nexport const types = {\r\n    FETCH_ORDERS_REQUEST:'USER/FETCH_ORDERS_REQUEST',\r\n    FETCH_ORDERS_SUCCESS:'USER/FETCH_ORDERS_SUCCESS',\r\n    FETCH_ORDERS_FAILURE:'USER/FETCH_ORDERS_FAILURE',\r\n    SET_CURRENT_TAB: 'USER/SET_CURRENT_TAB',\r\n    //删除订单\r\n    DELETE_ORDERS_REQUEST:'USER/DELETE_ORDERS_REQUEST',\r\n    DELETE_ORDERS_SUCCESS:'USER/DELETE_ORDERS_SUCCESS',\r\n    DELETE_ORDERS_FAILURE:'USER/DELETE_ORDERS_FAILURE',\r\n    //删除确认对话框\r\n    SHOW_DELETE_DIALOG:'USER/SHOW_DELETE_DIALOG',\r\n    HIDE_DELETE_DIALOG:'USER/HIDE_DELETE_DIALOG',\r\n    //订单评价编辑\r\n    SHOW_COMMENT_AREA: 'USER/SHOW_COMMENT_AREA',\r\n    HIDE_COMMENT_AREA: 'USER/HIDE_COMMENT_AREA',\r\n    //编辑评价内容\r\n    SET_COMMENT: 'USER/SET_COMMENT',\r\n    //打分\r\n    SET_STARS: 'USER/SET_STARS',\r\n    //提交评价\r\n    POST_COMMENT_REQUEST: 'USER/POST_COMMENT_REQUEST',\r\n    POST_COMMENT_SUCCESS: 'USER/POST_COMMENT_SUCCESS',\r\n    POST_COMMENT_FAILURE: 'USER/POST_COMMENT_FAILURE',\r\n}\r\n\r\nexport const actions = {\r\n    //获取订单列表\r\n    loadOrders : () => {\r\n        return (dispatch, getState) => {\r\n            const { fetched } = getState().user.orders\r\n            if (fetched) {\r\n                return null\r\n            }\r\n            const endpoint = url.getOrders()\r\n            return dispatch(fetchOrders(endpoint))\r\n        }\r\n    },\r\n    //切换tab\r\n    setCurrentTab: index => ({\r\n        type:types.SET_CURRENT_TAB,\r\n        index\r\n    }),\r\n    removeOrder: () => {\r\n        return (dispatch, getState) => {\r\n            const {id} = getState().user.currentOrder\r\n            if (id) {\r\n                dispatch(deleteOrderRequest())\r\n                new Promise((resolve, reject) => {\r\n                    setTimeout(()=> {\r\n                        dispatch(deleteOrderSuccess(id))\r\n                        dispatch(orderActions.deleteOrder(id))\r\n                        resolve()\r\n                    }, 500)\r\n                })\r\n            }}},\r\n    //显示删除对话框\r\n    showDeleteDialog: orderId => ({\r\n        type: types.SHOW_DELETE_DIALOG,\r\n        orderId\r\n    }),\r\n    \r\n    //隐藏删除对话框\r\n    hideDeleteDialog: () => ({\r\n        type: types.HIDE_DELETE_DIALOG\r\n    }),\r\n    //显示订单评价编辑框\r\n    showCommentArea: orderId => ({\r\n        type: types.SHOW_COMMENT_AREA,\r\n        orderId\r\n    }),\r\n    //隐藏订单评价编辑框\r\n    hideCommentArea: () => ({\r\n        type: types.HIDE_COMMENT_AREA\r\n    }),\r\n    //设置订单评价信息\r\n    setComment: (comment) => ({\r\n        type: types.SET_COMMENT,\r\n        comment\r\n    }),\r\n    //设置订单评价等级\r\n    setStars: (stars) => ({\r\n        type: types.SET_STARS,\r\n        stars\r\n    }),\r\n    //提交评价\r\n    submitComment: () => {\r\n        return (dispatch, getState) => {\r\n            dispatch(postCommentRequest())\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout (()=> {\r\n                    const {currentOrder:{id, stars, comment}} = getState().user\r\n                    const commentObj = {\r\n                        id: +new Date(),\r\n                        stars,\r\n                        content: comment\r\n                    }\r\n                    dispatch(postCommentSuccess())\r\n                    dispatch(commentActions.addComment(commentObj))\r\n                    dispatch(orderActions.addComment(id, commentObj.id))\r\n                    resolve()\r\n                },500)\r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n}\r\nconst deleteOrderRequest = () => ({\r\n    type: types.DELETE_ORDERS_REQUEST\r\n})\r\n\r\nconst deleteOrderSuccess = (orderId) => ({\r\n    type: types.DELETE_ORDERS_SUCCESS,\r\n    orderId\r\n})\r\n\r\nconst fetchOrders = endpoint => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_ORDERS_REQUEST,\r\n            types.FETCH_ORDERS_SUCCESS,\r\n            types.FETCH_ORDERS_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema\r\n    }\r\n})\r\n\r\nconst postCommentRequest = () => ({\r\n    type: types.POST_COMMENT_REQUEST\r\n})\r\n\r\nconst postCommentSuccess = () => ({\r\n    type: types.POST_COMMENT_SUCCESS\r\n})\r\n\r\n\r\n//reducer\r\nconst orders = (state=initialState.orders, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_ORDERS_REQUEST:\r\n            return {...state, isFetching: true}\r\n        case types.FETCH_ORDERS_SUCCESS:\r\n            const toPayIds = action.response.ids.filter(\r\n                id => action.response.orders[id].type === TO_PAY_TYPE\r\n            )\r\n            const availableIds = action.response.ids.filter(\r\n                id => action.response.orders[id].type === AVAILABLE_TYPE\r\n            )\r\n            const refundIds = action.response.ids.filter(\r\n                id => action.response.orders[id].type === REFUND_TYPE\r\n            )\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                ids: state.ids.concat(action.response.ids),\r\n                toPayIds: state.toPayIds.concat(toPayIds),\r\n                availableIds: state.ids.concat(availableIds),\r\n                refundIds: state.ids.concat(refundIds),\r\n                fetched: true\r\n            }\r\n        case orderTypes.DELETE_ORDER:\r\n        case types.DELETE_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ids: removeOrderId(state, 'ids', action.orderId),\r\n                toPayIds: removeOrderId(state, 'toPayIds', action.orderId),\r\n                availableIds: removeOrderId(state, 'availableIds', action.orderId),\r\n                refundIds: removeOrderId(state, 'refundIds', action.orderId)\r\n            }\r\n            case orderTypes.ADD_ORDER:\r\n                const { order } = action\r\n                const key = typeToKey[order.type]\r\n                return key ? {\r\n                    ...state,\r\n                    ids:[order.id].concat(state.ids),\r\n                    [key]: [order.id].concat(state[key])\r\n                } : {\r\n                    ...state,\r\n                    ids:[order.id].concat(state.ids),\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst removeOrderId = (state, key, orderId) => {\r\n    return state[key].filter(id => {\r\n        return id !== orderId\r\n    })\r\n}\r\n\r\nconst currentTab = (state=initialState.currentTab, action) => {\r\n    switch(action.type) {\r\n        case types.SET_CURRENT_TAB:\r\n            return action.index\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst currentOrder = ( state = initialState.currentOrder, action) => {\r\n    switch (action.type) {\r\n        case types.SHOW_DELETE_DIALOG:\r\n            return {\r\n                ...state,\r\n                id: action.orderId,\r\n                isDeleting: true\r\n            }\r\n        case types.SHOW_COMMENT_AREA:\r\n            return {\r\n                ...state,\r\n                id: action.orderId,\r\n                isCommenting: true\r\n            }\r\n        case types.HIDE_DELETE_DIALOG:\r\n        case types.HIDE_COMMENT_AREA:\r\n        case types.DELETE_ORDERS_SUCCESS:\r\n        case types.DELETE_ORDERS_FAILURE:\r\n        case types.POST_COMMENT_SUCCESS:\r\n        case types.POST_COMMENT_FAILURE:\r\n            return initialState.currentOrder\r\n        case types.SET_COMMENT: \r\n         return {\r\n             ...state,\r\n             comment: action.comment\r\n         }\r\n        case types.SET_STARS: \r\n         return {\r\n             ...state,\r\n             stars: action.stars\r\n         }\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    currentTab,\r\n    orders,\r\n    currentOrder\r\n})\r\n\r\nexport default reducer\r\n\r\n//selectors\r\nexport const getCurrentTab = state =>  state.user.currentTab\r\n\r\n\r\nconst getUserOrders = state => state.user.orders\r\n\r\n\r\n\r\nexport const getDeletingOrderId = (state) => {\r\n    return state.user.currentOrder &&\r\n        state.user.currentOrder.isDeleting ? \r\n        state.user.currentOrder.id : null\r\n    }\r\n\r\n//获取正在评价的订单id\r\nexport const getCommentingOrderId = (state) => {\r\n    return state.user.currentOrder &&\r\n     state.user.currentOrder.isCommenting ? \r\n     state.user.currentOrder.id : null\r\n}\r\n\r\n\r\n//获取当前评论信息\r\nexport const getCurrentOrderComment = (state) => {\r\n    return state.user.currentOrder ?\r\n     state.user.currentOrder.comment  : ''\r\n}\r\n\r\n\r\n//获取当前评级信息\r\nexport const getCurrentOrderStars = (state) => {\r\n    return state.user.currentOrder ?\r\n     state.user.currentOrder.stars : 0\r\n}\r\n\r\n\r\nexport const getOrders = createSelector(\r\n    [getCurrentTab, getUserOrders, getAllOrders],\r\n    (tabIndex, userOrders, orders) => {\r\n        const key = ['ids', 'toPayIds', \r\n        'availableIds', 'refundIds'][tabIndex]\r\n        const orderIds = userOrders[key]\r\n        return orderIds.map(id => {\r\n            return orders[id]\r\n    })}\r\n)\r\n\r\n","import { combineReducers} from \"redux\"\r\nimport url from \"../../utils/url\";\r\nimport { FETCH_DATA } from \"../middleware/api\";\r\nimport { schema } from \"./entities/products\";\r\n\r\n// 请求参数使用到的常量对象\r\nexport const params = {\r\n  PATH_LIKES: \"likes\",\r\n  PATH_DISCOUNTS: \"discounts\",\r\n  PAGE_SIZE_LIKES: 5,\r\n  PAGE_SIZE_DISCOUNTS: 3\r\n};\r\n\r\nexport const types = {\r\n  //获取猜你喜欢请求\r\n  FETCH_LIKES_REQUEST: \"HOME/FETCH_LIKES_REQUEST\",\r\n  //获取猜你喜欢请求成功\r\n  FETCH_LIKES_SUCCESS: \"HOME/FETCH_LIKES_SUCCESS\",\r\n  //获取猜你喜欢请求失败\r\n  FETCH_LIKES_FAILURE: \"HOME/FETCH_LIKES_FAILURE\",\r\n  //获取超值特惠请求\r\n  FETCH_DISCOUNTS_REQUEST: \"HOME/FETCH_DISCOUNTS_REQUEST\",\r\n  //获取超值特惠请求成功\r\n  FETCH_DISCOUNTS_SUCCESS: \"HOME/FETCH_DISCOUNTS_SUCCESS\",\r\n  //获取超值特惠请求失败\r\n  FETCH_DISCOUNTS_FAILURE: \"HOME/FETCH_DISCOUNTS_FAILURE\"\r\n};\r\n\r\nconst initialState = {\r\n  likes: {\r\n    isFetching: false,\r\n    pageCount: 0,\r\n    ids: []\r\n  },\r\n  discounts: {\r\n    isFetching: false,\r\n    ids: []\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  //加载猜你喜欢的数据\r\n  loadLikes: () => {\r\n    return (dispatch, getState) => {\r\n      const { pageCount } = getState().home.likes;\r\n      const rowIndex = pageCount * params.PAGE_SIZE_LIKES;\r\n      const endpoint = url.getProductList(\r\n        params.PATH_LIKES,\r\n        rowIndex,\r\n        params.PAGE_SIZE_LIKES\r\n      );\r\n      return dispatch(fetchLikes(endpoint));\r\n    };\r\n  },\r\n  //加载特惠商品\r\n  loadDiscounts: () => {\r\n    return (dispatch, getState) => {\r\n      const { ids } = getState().home.discounts\r\n      if(ids.length > 0) {\r\n        return null\r\n      }\r\n      const endpoint = url.getProductList(\r\n        params.PATH_DISCOUNTS,\r\n        0,\r\n        params.PAGE_SIZE_DISCOUNTS\r\n      );\r\n      return dispatch(fetchDiscounts(endpoint));\r\n    };\r\n  }\r\n};\r\n\r\nconst fetchLikes = endpoint => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_LIKES_REQUEST,\r\n      types.FETCH_LIKES_SUCCESS,\r\n      types.FETCH_LIKES_FAILURE\r\n    ],\r\n    endpoint,\r\n    schema\r\n  }\r\n});\r\n\r\nconst fetchDiscounts = endpoint => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_DISCOUNTS_REQUEST,\r\n      types.FETCH_DISCOUNTS_SUCCESS,\r\n      types.FETCH_DISCOUNTS_FAILURE\r\n    ],\r\n    endpoint,\r\n    schema\r\n  }\r\n});\r\n\r\n//猜你喜欢reducer\r\nconst likes = (state = initialState.likes, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_LIKES_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_LIKES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        pageCount: state.pageCount + 1,\r\n        ids: state.ids.concat(action.response.ids)\r\n      };\r\n    case types.FETCH_LIKES_FAILURE:\r\n      return {...state, isFetching: false}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//特惠商品reducer\r\nconst discounts = (state = initialState.discounts, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_DISCOUNTS_REQUEST:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_DISCOUNTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        ids: state.ids.concat(action.response.ids)\r\n      };\r\n    case types.FETCH_DISCOUNTS_FAILURE:\r\n      return {...state, isFetching: false}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  discounts,\r\n  likes\r\n})\r\n\r\nexport default reducer;\r\n\r\n//selectors\r\n//获取猜你喜欢state\r\nexport const getLikes = state => {\r\n  return state.home.likes.ids.map(id => {\r\n    return state.entities.products[id]\r\n  })\r\n}\r\n\r\nexport const getLikesIsFetching = state => {\r\n  return state.home.likes.isFetching;\r\n}\r\n\r\n//获取特惠商品state\r\nexport const getDiscounts = state => {\r\n  return state.home.discounts.ids.map(id => {\r\n    return state.entities.products[id]\r\n  })\r\n}\r\n\r\n//猜你喜欢当前分页码\r\nexport const getPageCountOfLikes = state => {\r\n  return state.home.likes.pageCount\r\n}\r\n\r\n\r\n","import { getProductDetail } from \"./entities/products\"\r\nimport { actions as orderActions, AVAILABLE_TYPE } from \"./entities/orders\"\r\nimport { createSelector } from \"reselect\"\r\nexport const types = {\r\n    SET_ORDER_QUANTITY: 'PURCHASE/SET_ORDER_QUANTITY',\r\n    CLOSE_TIP:  'PURCHASE/CLOSE_TIP',\r\n    //提交订单相关\r\n    SUBMIT_ORDER_REQUEST:  'PURCHASE/SUBMIT_ORDER_REQUEST',\r\n    SUBMIT_ORDER_SUCCESS:  'PURCHASE/SUBMIT_ORDER_SUCCESS',\r\n    SUBMIT_ORDER_FAILURE:  'PURCHASE/SUBMIT_ORDER_FAILURE',\r\n}\r\n\r\n\r\n\r\nconst initialState = {\r\n    quantity: 1,\r\n    showTip: false\r\n}\r\n\r\nexport const actions = {\r\n    setOrderQuantity: quantity => ({\r\n        type: types.SET_ORDER_QUANTITY,\r\n        quantity\r\n    }),\r\n    closeTip: () => ({\r\n        type: types.CLOSE_TIP\r\n    }),\r\n    submitOrder: productId => {\r\n        return (dispatch, getState) => {\r\n            dispatch({\r\n                type: types.SUBMIT_ORDER_REQUEST\r\n            })\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout (() => {\r\n                    const product = getProductDetail(getState(), productId)\r\n                    const quantity = getState().purchase.quantity\r\n                    const totalPrice = (product.currentPrice * quantity).toFixed(2)\r\n                    const text1 = `${quantity}张 | 总价：${totalPrice}`\r\n                    const text2 = product.validityPeriod\r\n                    const order = {\r\n                        title: `${product.shop} : ${product.product}`,\r\n                        orderPicUrl: product.picture,\r\n                        channel: '团购',\r\n                        statusText: '待消费',\r\n                        text: [text1, text2],\r\n                        type: AVAILABLE_TYPE\r\n                    }\r\n                    dispatch(orderActions.addOrder(order))\r\n                    dispatch({\r\n                        type: types.SUBMIT_ORDER_SUCCESS\r\n                    })\r\n                }, 500)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_ORDER_QUANTITY:\r\n            return {...state, quantity: action.quantity}\r\n        case types.CLOSE_TIP:\r\n            return {...state, showTip: false}\r\n        case types.SUBMIT_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                showTip: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\n//selectors\r\nexport const getQuantity = state => {\r\n    return state.purchase.quantity\r\n}\r\n\r\n\r\nexport const getTipStatus = state => {\r\n    return state.purchase.showTip\r\n}\r\n\r\nexport const getProduct = (state, id) => {\r\n    return getProductDetail(state, id)\r\n}\r\n\r\nexport const getTotalPrice = createSelector([getProduct, getQuantity],\r\n     (product, quantity) => {\r\n         if (!product) {\r\n             return 0\r\n         } \r\n         return (product.currentPrice*quantity).toFixed(2)\r\n     })\r\n\r\n","import React, { Component } from 'react';\r\nimport \"./style.css\";\r\n\r\nclass ErrorToast extends Component {\r\n  render() {\r\n    const { msg } = this.props\r\n    return (\r\n      <div className=\"errorToast\">\r\n        <div className=\"errorToast_text\">\r\n          {msg}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setTimeout(() => {\r\n      this.props.clearError();\r\n    }, 10000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.timer) {\r\n      clearTimeout(this.timer)\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorToast;","const initialState = {\r\n    error: null\r\n  }\r\n  \r\nexport const types = {\r\nCLEAR_ERROR: \"APP/CLEAR_ERROR\"\r\n}\r\n\r\n//action creators\r\nexport const actions = {\r\nclearError: () => ({\r\n    type: types.CLEAR_ERROR\r\n})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\nconst { type, error } = action\r\nif (type === types.CLEAR_ERROR) {\r\n    return {...state, error: null}\r\n} else if (error) {\r\n    return {...state, error: error}\r\n}\r\nreturn state;\r\n}\r\n\r\nexport default reducer;\r\n\r\n// selectors\r\nexport const getError = (state) => {\r\nreturn state.app.error\r\n}","import React, { Component } from 'react'\r\n\r\nexport default function asyncComponent(importComponent) {\r\n    class AsyncComponent extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n            this.state = {\r\n                component: null\r\n            }\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent().then((mod) => {\r\n                this.setState({\r\n                    component:mod.default\r\n                })\r\n            })\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component\r\n            return C ? <C {...this.props}/> : null\r\n        }\r\n    }\r\n\r\n    return AsyncComponent\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect,Route } from 'react-router'\r\nimport { isLogin } from '../../redux/modules/login'\r\n\r\nclass PrivateRoute extends Component {\r\n    render() {\r\n        const { component: Component, login, ...rest} = this.props\r\n        return (\r\n            <Route \r\n            {...rest}\r\n                render={\r\n                (props) => {\r\n                   return login ? (<Component {...props}/>)  :\r\n                    ( <Redirect to={{pathname:'/login',\r\n                                state: {from: props.location}\r\n                            }}/>)\r\n                }\r\n            }/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        login: isLogin(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(PrivateRoute)\r\n\r\n\r\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ErrorToast from \"../../components/ErrorToast\";\nimport { actions as appActions, getError } from \"../../redux/modules/app\";\nimport asyncComponent from \"../../utils/AsyncComponent\";\nimport PrivateRoute from \"../PrivateRoute\";\n\nconst Home = asyncComponent(()=> import('../Home'))\nconst ProductDetail = asyncComponent(()=> import(\"../ProductDetail\"))\nconst Search = asyncComponent(()=> import(\"../Search\"))\nconst SearchResult = asyncComponent(()=> import('../SearchResult'))\nconst Login = asyncComponent(()=> import('../Login'))\nconst User = asyncComponent(()=> import('../User'))\nconst Purchase = asyncComponent(()=> import('../Purchase'))\n\nclass App extends Component {\n  render() {\n    const {\n      error,\n      appActions: { clearError }\n    } = this.props;\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path='/login' component={Login}/>\n            <PrivateRoute path='/user' component={User}/>\n            <Route path='/detail/:id' component={ProductDetail}/>\n            <Route path='/search' component={Search}/>\n            <Route path='/search_result' component={SearchResult}/>\n            <PrivateRoute path='/purchase/:id' component={Purchase}/>\n            <Route path='/' component={Home}/>\n          </Switch>\n        </Router>\n\n        {error ? <ErrorToast msg={error} clearError={clearError} /> : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    error: getError(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    appActions: bindActionCreators(appActions, dispatch)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { combineReducers } from \"redux\";\r\nimport products from \"./products\";\r\nimport shops from \"./shops\";\r\nimport orders from \"./orders\";\r\nimport comments from \"./comments\";\r\nimport keywords from './keywords'\r\n\r\nconst rootReducer = combineReducers({\r\n    products,\r\n    shops,\r\n    orders,\r\n    comments,\r\n    keywords\r\n})\r\n\r\n\r\nexport default rootReducer","import { combineReducers } from \"redux\";\r\nimport app from \"./app\";\r\nimport home from \"./home\";\r\nimport entities from \"./entities\";\r\nimport detail from \"./detail\";\r\nimport search from './search'\r\nimport login from './login'\r\nimport user from './user'\r\nimport purchase from './purchase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app,\r\n    home,\r\n    entities,\r\n    detail,\r\n    search,\r\n    login,\r\n    user,\r\n    purchase\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport api from './middleware/api';\r\nimport rootReducer from './modules';\r\n\r\nlet store;\r\n\r\nif(\r\n    process.env.NODE_ENV !== \"production\" && \r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ) {\r\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n        store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk,api)));\r\n} else {\r\n    store = createStore(rootReducer, applyMiddleware(thunk,api));\r\n\r\n}\r\n\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./containers/App\";\nimport store from \"./redux/store\";\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}